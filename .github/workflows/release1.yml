name: release1
on:
  push:
    tags:
      - '*'
  
env:
  CARGO_TERM_COLOR: always
  MDBOOK_VERSION: 0.4.51
  
jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          # - os: windows-latest
          #   target: x86_64-pc-windows-msvc

    runs-on: ${{ matrix.os }}
    steps:
      - name: Cahce
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - uses: actions/checkout@v4
      - name: Install mdBook
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          rustup update
          cargo install --version ${MDBOOK_VERSION} mdbook --force

      - name: Build release
        run: cargo build --release

      - name: Artifact (Unix)
        if: matrix.target != 'x86_64-pc-windows-msvc'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: target/release/mdbook-lang

      # - name: Artifact (Windows)
      #   if: matrix.target == 'x86_64-pc-windows-msvc'
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: ${{ matrix.target }}
      #     path: target/release/mdbook-lang.exe

      # - name: Publish crate
      #   if: matrix.target == 'x86_64-unknown-linux-gnu'
      #   run: |
      #     cargo login ${{ secrets.CARGO_REGISTRY_TOKEN}}
      #     cargo publish

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v4

      - name: Get the version
        id: get_version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: list artifacts
        run: |
          echo "Artifacts:"
          ls -lR
      - name: Install packages
        run: sudo apt update && sudo apt install -y upx-ucl zip

      - name: Rename binaries
        run: |
          mv x86_64-unknown-linux-gnu mdbook-lang-${{ env.RELEASE_VERSION }}-x86_64-unknown-linux-gnu
          mv x86_64-apple-darwin mdbook-lang-${{ env.RELEASE_VERSION }}-x86_64-apple-darwin
          # mv x86_64-pc-windows-msvc mdbook-lang-${{ env.RELEASE_VERSION }}-x86_64-pc-windows-msvc

      - name: Compress binaries
        run: |
          chmod u+x mdbook-lang-*/mdbook-lang*
          upx --best mdbook-lang-*/mdbook-lang*
          zip -r mdbook-lang-${{ env.RELEASE_VERSION }}-x86_64-unknown-linux-gnu{.zip,}
          zip -r mdbook-lang-${{ env.RELEASE_VERSION }}-x86_64-apple-darwin{.zip,}
          # zip -r mdbook-lang-${{ env.RELEASE_VERSION }}-x86_64-pc-windows-msvc{.zip,}

     

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ env.RELEASE_VERSION }}
          files: |
            mdbook-lang-${{ env.RELEASE_VERSION }}-x86_64-unknown-linux-gnu.zip
            mdbook-lang-${{ env.RELEASE_VERSION }}-x86_64-apple-darwin.zip
            # mdbook-lang-${{ env.RELEASE_VERSION }}-x86_64-pc-windows-msvc.zip
